/**
 * Generated by PixelVoid CLI (https://github.com/Pixel-Void/cli)
 */
import { Service } from 'typedi';

<%- props.dataloaders.map(loader => `import ${loader.charAt(0).toUpperCase()}${loader.slice(1)}Dataloader, { ${loader.charAt(0).toUpperCase()}${loader.slice(1)}Loader } from './${loader}-dataloader';`).join('\n') %>

export interface LoadersContext {
  <%= props.dataloaders.map(loader => `${loader}: ${loader.charAt(0).toUpperCase()}${loader.slice(1)}Loader;`).join('\n  ') %>
}

@Service()
export default class Loaders {
  constructor(
    <%- props.dataloaders.map(loader => `private readonly ${loader}Loader: ${loader.charAt(0).toUpperCase()}${loader.slice(1)}Dataloader,`).join('\n    ') %>
  ) { }

  public get loaders(): LoadersContext {
    return ({
      <%- props.dataloaders.map(loader => `${loader}: { ...this.${loader}Loader.loaders },`).join('\n      ') %>
    });
  }
}
